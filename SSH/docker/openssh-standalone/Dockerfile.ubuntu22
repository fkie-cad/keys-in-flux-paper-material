FROM ubuntu:22.04

LABEL maintainer="SSH Key Lifecycle Lab"
LABEL description="OpenSSH server/client with key export for traffic decryption (Ubuntu 22.04)"

ENV DEBIAN_FRONTEND=noninteractive

##############################################################################
# Fix GPG keys and install dependencies (ARM/Apple Silicon support)
##############################################################################
# Fix repository GPG keys (especially important for ARM builds)
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /var/lib/apt/lists/partial

# Update repository keys and install ca-certificates first
RUN apt-get update --allow-insecure-repositories || true && \
    apt-get install -y --allow-unauthenticated \
        ca-certificates \
        gnupg \
        apt-utils && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 871920D1991BC93C || \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 871920D1991BC93C || true

# Now do the full update and install all dependencies
RUN apt-get clean && \
    apt-get update && \
    apt-get install -y \
    build-essential \
    wget \
    curl \
    pkg-config \
    libssl-dev \
    zlib1g-dev \
    libpam0g-dev \
    libselinux1-dev \
    # Client utilities
    sshpass \
    expect \
    python3 \
    python3-pip \
    socat \
    tcpdump \
    iproute2 \
    net-tools \
    vim \
    less \
    # Cleanup
    && rm -rf /var/lib/apt/lists/*

##############################################################################
# Download and build OpenSSH with key export patch
##############################################################################
ENV OPENSSH_VERSION=8.9p1
WORKDIR /tmp/build

# Download OpenSSH source
RUN wget -q https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-${OPENSSH_VERSION}.tar.gz && \
    tar xzf openssh-${OPENSSH_VERSION}.tar.gz && \
    rm openssh-${OPENSSH_VERSION}.tar.gz

# Copy and apply keylog patch
COPY openssh-keylog.patch /tmp/build/
WORKDIR /tmp/build/openssh-${OPENSSH_VERSION}

# Apply patch (if it fails, continue - we'll add logging manually)
RUN patch -p1 < /tmp/build/openssh-keylog.patch || \
    echo "[WARN] Patch failed - keylog functionality may need manual integration"

# Configure and compile OpenSSH with debug symbols
RUN CFLAGS="-g -O0 -fno-omit-frame-pointer" \
    ./configure \
        --prefix=/usr \
        --sysconfdir=/etc/ssh \
        --with-pam \
        --with-selinux \
        --with-privsep-path=/var/empty \
        --with-privsep-user=sshd \
        --with-pid-dir=/var/run \
        --without-openssl-header-check && \
    make -j$(nproc) && \
    make install

# Create privilege separation directory and user
RUN mkdir -p /var/empty && \
    chmod 755 /var/empty && \
    useradd -r -U -d /var/empty -s /bin/false -c "sshd privilege separation" sshd || true

##############################################################################
# Setup container environment
##############################################################################

# Create directories for data
RUN mkdir -p /data/keylogs /data/dumps /data/captures && \
    chmod 777 /data/keylogs /data/dumps /data/captures

# Copy entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set default environment variables
ENV MODE=server
ENV SSHKEYLOGFILE=/data/keylogs/ssh_keylog.log
ENV SSH_PORT=22
ENV CAPTURE_TRAFFIC=true
ENV CAPTURE_DIR=/data/captures

# Expose SSH port
EXPOSE 22

# Create /etc/ssh directory
RUN mkdir -p /etc/ssh

# Set working directory
WORKDIR /root

# Entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

##############################################################################
# Labels for usage info
##############################################################################
LABEL usage.server="docker run -d -p 2222:22 -v \$(pwd)/data:/data -e MODE=server openssh-standalone"
LABEL usage.client="docker run -it --rm -v \$(pwd)/data:/data -e MODE=client -e HOST=192.168.1.100 openssh-standalone"
LABEL keylog.location="/data/keylogs/ssh_keylog.log"
LABEL ubuntu.version="22.04"
